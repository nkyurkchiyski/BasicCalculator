<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAVVVVAw0NDYsFBQXwAAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/BQUF8A0NDYtVVVUDAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAODg5uLS0t/9XV1f/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u
        7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/V1dX/LS0t/w4O
        Dm4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICLWhoaH/////////////////////////
        ////////////////////////////////////////////////////////////////////////////////
        //+hoaH/CAgItQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFu6qqqv//////o6Oj/zMz
        M/8zMzP/MzMz/3p6ev//////7+/v/zk5Of8zMzP/MzMz/zk5Of/v7+///////3p6ev8zMzP/MzMz/zMz
        M/+jo6P//////6qqqv8FBQW7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQW7qqqq////
        //93d3f/CwsLqAsLC0QQEBCCRERE///////d3d3/BgYG8wsLC0QLCwtEBgYG893d3f//////RERE/xAQ
        EIILCwtECwsLqHd3d///////qqqq/wUFBbsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUF
        Bbuqqqr//////3d3d/8LCwuJAAAAABUVFVVERET//////93d3f8JCQnuAAAAAAAAAAAJCQnu3d3d////
        //9ERET/FRUVVQAAAAALCwuJd3d3//////+qqqr/BQUFuwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABQUFu6qqqv//////d3d3/wYGBtAICAiaCAgIu0RERP//////3d3d/wMDA/gICAiaCAgImgMD
        A/jd3d3//////0RERP8ICAi7CAgImgYGBtB3d3f//////6qqqv8FBQW7AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAFBQW7qqqq///////Q0ND/iIiI/4iIiP+IiIj/ubm5///////6+vr/j4+P/4iI
        iP+IiIj/j4+P//r6+v//////ubm5/4iIiP+IiIj/iIiI/9DQ0P//////qqqq/wUFBbsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBbuqqqr/////////////////////////////////////////
        //////////////////////////////////////////////////////////////////+qqqr/BQUFuwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFu6qqqv//////2dnZ/5mZmf+ZmZn/mZmZ/8XF
        xf///////Pz8/6CgoP+ZmZn/mZmZ/6CgoP/8/Pz//////8XFxf+ZmZn/mZmZ/5mZmf/Z2dn//////6qq
        qv8FBQW7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQW7qqqq//////93d3f/BgYG2AsL
        C6oJCQnHRERE///////e3t7/AwMD+QsLC6oLCwuqAwMD+d7e3v//////RERE/wkJCccLCwuqBgYG2Hd3
        d///////qqqq/wUFBbsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBbuqqqr//////3d3
        d/8LCwuJAAAAABUVFVVERET//////93d3f8JCQnuAAAAAAAAAAAJCQnu3d3d//////9ERET/FRUVVQAA
        AAALCwuJd3d3//////+qqqr/BQUFuwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFu6qq
        qv//////d3d3/w4ODqAoKCgzGBgYd0RERP//////3d3d/wcHB/EoKCgzKCgoMwcHB/Hd3d3//////0RE
        RP8YGBh3KCgoMw4ODqB3d3f//////6qqqv8FBQW7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAFBQW7qqqq//////+ampr/IiIi/yIiIv8iIiL/bm5u///////s7Oz/KCgo/yIiIv8iIiL/KCgo/+zs
        7P//////bm5u/yIiIv8iIiL/IiIi/5qamv//////qqqq/wUFBbsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAUFBbuqqqr/////////////////////////////////////////////////////////
        //////////////////////////////////////////////////+qqqr/BQUFuwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAABQUFu6qqqv//////////////////////////////////////////////
        /////////////////////////////////////////////////////////////6qqqv8FBQW7AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQW7qqqq//////+IiIj/AAAA/wAAAP8AAAD/VVVV////
        ///o6Oj/BgYG/wAAAP8AAAD/BgYG/+jo6P//////VVVV/wAAAP8AAAD/AAAA/4iIiP//////qqqq/wUF
        BbsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBbuqqqr//////3d3d/8SEhKQeHh4ESAg
        IGBERET//////93d3f8HBwfveHh4EXh4eBEHBwfv3d3d//////9ERET/ICAgYHh4eBESEhKQd3d3////
        //+qqqr/BQUFuwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFu6qqqv//////d3d3/wsL
        C4kAAAAAFRUVVURERP//////3d3d/wkJCe4AAAAAAAAAAAkJCe7d3d3//////0RERP8VFRVVAAAAAAsL
        C4l3d3f//////6qqqv8FBQW7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQW7qqqq////
        //95eXn/BgYG5woKCswHBwfdRkZG///////f39//AgIC/AoKCswKCgrMAgIC/N/f3///////RkZG/wcH
        B90KCgrMBgYG53l5ef//////qqqq/wUFBbsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUF
        Bbuqqqr//////+rq6v+7u7v/u7u7/7u7u//c3Nz////////////CwsL/u7u7/7u7u//CwsL/////////
        ///c3Nz/u7u7/7u7u/+7u7v/6urq//////+qqqr/BQUFuwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAABQUFu6qqqv//////////////////////////////////////////////////////////////
        /////////////////////////////////////////////6qqqv8FBQW7AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAFBQW7qqqq//////++vr7/ZmZm/2ZmZv9mZmb/ZmZm/2ZmZv9mZmb/ZmZm/2Zm
        Zv9mZmb/ZmZm/2ZmZv9mZmb/ZmZm/2ZmZv9mZmb/ZmZm/76+vv//////qqqq/wUFBbsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBbuqqqr//////3d3d/8ICAjADw8Pdw8PD3cPDw93Dw8Pdw8P
        D3cPDw93Dw8Pdw8PD3cPDw93Dw8Pdw8PD3cPDw93Dw8Pdw8PD3cICAjAd3d3//////+qqqr/BQUFuwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFu6qqqv//////d3d3/wsLC4kAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsLC4l3d3f//////6qq
        qv8FBQW7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBQW7qqqq//////93d3f/CwsLiQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wgAAAAACwsLiXd3
        d///////qqqq/wUFBbsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUFBbuqqqr//////3d3
        d/8LCwuJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAALCwuJd3d3//////+qqqr/BQUFuwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQUFu6qq
        qv//////d3d3/wsLC6gLCwtECwsLRAsLC0QLCwtECwsLRAsLC0QLCwtECwsLRAsLC0QLCwtECwsLRAsL
        C0QLCwtECwsLRAsLC6h3d3f//////6qqqv8FBQW7AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAFBQW7qqqq//////+jo6P/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMzM/8zMzP/MzMz/zMz
        M/8zMzP/MzMz/zMzM/8zMzP/MzMz/6Ojo///////qqqq/wUFBbsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAgICLWhoaH/////////////////////////////////////////////////////////
        //////////////////////////////////////////////////+hoaH/CAgItQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAADg4Obi0tLf/V1dX/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u
        7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/7u7u/+7u7v/u7u7/1dXV/y0tLf8ODg5uAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVVVUDDQ0NiwUFBfAAAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8FBQXwDQ0Ni1VV
        VQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>